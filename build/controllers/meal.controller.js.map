{"version":3,"sources":["../../api/controllers/meal.controller.js"],"names":["MealService","MealController","fetchAllMeals","req","res","allMeals","json","status","data","addAMeal","newMeal","body","createdMeal","addMeal","getSingleMeal","id","params","foundMeal","getAMeal","updateAMeal","updatedMeal","deleteAMeal"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,aAAa,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,UAAMC,QAAQ,GAAGL,WAAW,CAACE,aAAZ,EAAjB;AACA,WAAOE,GAAG,CACPE,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,QADJ;AAEJC,MAAAA,IAAI,EAAEH;AAFF,KADD,EAKJE,MALI,CAKG,GALH,CAAP;AAMD,GAToB;AAWrBE,EAAAA,QAAQ,EAAE,CAACN,GAAD,EAAMC,GAAN,KAAc;AACtB;;;;;;;;AASA,UAAMM,OAAO,GAAGP,GAAG,CAACQ,IAApB;AACA,UAAMC,WAAW,GAAGZ,WAAW,CAACa,OAAZ,CAAoBH,OAApB,CAApB;AAEA,WAAON,GAAG,CACPE,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJC,MAAAA,IAAI,EAAEI;AAFF,KADD,EAKJL,MALI,CAKG,GALH,CAAP;AAMD,GA9BoB;AA+BrBO,EAAAA,aAAa,EAAE,CAACX,GAAD,EAAMC,GAAN,KAAc;AAC3B,UAAM;AAAEW,MAAAA;AAAF,QAASZ,GAAG,CAACa,MAAnB;AACA,UAAMC,SAAS,GAAGjB,WAAW,CAACkB,QAAZ,CAAqBH,EAArB,CAAlB;AACA,WAAOX,GAAG,CACPE,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJC,MAAAA,IAAI,EAAES;AAFF,KADD,EAKJV,MALI,CAKG,GALH,CAAP;AAMD,GAxCoB;AAyCrBY,EAAAA,WAAW,EAAE,CAAChB,GAAD,EAAMC,GAAN,KAAc;AACzB,UAAM;AAAEW,MAAAA;AAAF,QAASZ,GAAG,CAACa,MAAnB;AACA,UAAMI,WAAW,GAAGjB,GAAG,CAACQ,IAAxB,CAFyB,CAEK;;AAC9B,UAAMD,OAAO,GAAGV,WAAW,CAACmB,WAAZ,CAAwBJ,EAAxB,EAA4BK,WAA5B,CAAhB;AAEA,WAAOhB,GAAG,CACPE,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJC,MAAAA,IAAI,EAAEE;AAFF,KADD,EAKJH,MALI,CAKG,GALH,CAAP;AAMD,GApDoB;AAqDrBc,EAAAA,WAAW,EAAE,CAAClB,GAAD,EAAMC,GAAN,KAAc;AACzB,UAAM;AAAEW,MAAAA;AAAF,QAASZ,GAAG,CAACa,MAAnB;AACAhB,IAAAA,WAAW,CAACqB,WAAZ,CAAwBN,EAAxB;AAEA,WAAOX,GAAG,CACPE,IADI,CACC;AACJC,MAAAA,MAAM,EAAE;AADJ,KADD,EAIJA,MAJI,CAIG,GAJH,CAAP;AAKD;AA9DoB,CAAvB;AAiEA,eAAeN,cAAf","sourcesContent":["import MealService from '../services/meal.service';\n\nconst MealController = {\n  fetchAllMeals: (req, res) => {\n    const allMeals = MealService.fetchAllMeals();\n    return res\n      .json({\n        status: 'sucess',\n        data: allMeals\n      })\n      .status(200);\n  },\n\n  addAMeal: (req, res) => {\n    /*\n            Expect json of the format\n            {\n                name: \"some food\",\n                size: \"large\",\n                price: 300,\n            }\n        */\n\n    const newMeal = req.body;\n    const createdMeal = MealService.addMeal(newMeal);\n\n    return res\n      .json({\n        status: 'success',\n        data: createdMeal\n      })\n      .status(201);\n  },\n  getSingleMeal: (req, res) => {\n    const { id } = req.params;\n    const foundMeal = MealService.getAMeal(id);\n    return res\n      .json({\n        status: 'success',\n        data: foundMeal\n      })\n      .status(200);\n  },\n  updateAMeal: (req, res) => {\n    const { id } = req.params;\n    const updatedMeal = req.body; // get updated meal data from body\n    const newMeal = MealService.updateAMeal(id, updatedMeal);\n\n    return res\n      .json({\n        status: 'success',\n        data: newMeal\n      })\n      .status(200);\n  },\n  deleteAMeal: (req, res) => {\n    const { id } = req.params;\n    MealService.deleteAMeal(id);\n\n    return res\n      .json({\n        status: 'success'\n      })\n      .status(204);\n  }\n};\n\nexport default MealController;\n"],"file":"meal.controller.js"}