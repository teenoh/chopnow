{"version":3,"sources":["../../api/services/meal.service.js"],"names":["dummyData","Meal","MealService","fetchAllMeals","meals","map","meal","newMeal","id","name","desc","price","addMeal","mealLen","length","lastId","newId","push","getAMeal","find","updateAMeal","updatedMeal","oldMealIndex","findIndex","oldMeal","parseInt","deleteAMeal","filter"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,aAAa,EAAE,MAAM;AACnB,WAAOH,SAAS,CAACI,KAAV,CAAgBC,GAAhB,CAAoBC,IAAI,IAAI;AACjC,YAAMC,OAAO,GAAG,IAAIN,IAAJ,EAAhB;AACAM,MAAAA,OAAO,CAACC,EAAR,GAAaF,IAAI,CAACE,EAAlB;AACAD,MAAAA,OAAO,CAACE,IAAR,GAAeH,IAAI,CAACG,IAApB;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAeJ,IAAI,CAACI,IAApB;AACAH,MAAAA,OAAO,CAACI,KAAR,GAAgBL,IAAI,CAACK,KAArB;AACA,aAAOJ,OAAP;AACD,KAPM,CAAP;AAQD,GAViB;AAWlBK,EAAAA,OAAO,EAAEN,IAAI,IAAI;AACf,UAAMO,OAAO,GAAGb,SAAS,CAACI,KAAV,CAAgBU,MAAhC;AACA,UAAMC,MAAM,GAAGf,SAAS,CAACI,KAAV,CAAgBS,OAAO,GAAG,CAA1B,EAA6BL,EAA5C;AACA,UAAMQ,KAAK,GAAGD,MAAM,GAAG,CAAvB;AAEAT,IAAAA,IAAI,CAACE,EAAL,GAAUQ,KAAV;AAEAhB,IAAAA,SAAS,CAACI,KAAV,CAAgBa,IAAhB,CAAqBX,IAArB;AACA,WAAOA,IAAP;AACD,GApBiB;AAqBlBY,EAAAA,QAAQ,EAAEV,EAAE,IAAI;AACd,UAAMF,IAAI,GAAGN,SAAS,CAACI,KAAV,CAAgBe,IAAhB,CAAqBb,IAAI,IAAIA,IAAI,CAACE,EAAL,IAAWA,EAAxC,CAAb;AACA,WAAOF,IAAI,IAAI,EAAf;AACD,GAxBiB;AAyBlBc,EAAAA,WAAW,EAAE,CAACZ,EAAD,EAAKa,WAAL,KAAqB;AAChC,UAAMC,YAAY,GAAGtB,SAAS,CAACI,KAAV,CAAgBmB,SAAhB,CAA0BjB,IAAI,IAAIA,IAAI,CAACE,EAAL,IAAWA,EAA7C,CAArB;AACA,UAAMgB,OAAO,GAAGxB,SAAS,CAACI,KAAV,CAAgBkB,YAAhB,CAAhB;AACA,UAAMf,OAAO,GAAG,EAAE,GAAGiB,OAAL;AAAc,SAAGH,WAAjB;AAA8Bb,MAAAA,EAAE,EAAEiB,QAAQ,CAACjB,EAAD;AAA1C,KAAhB;AAEAR,IAAAA,SAAS,CAACI,KAAV,CAAgBkB,YAAhB,IAAgCf,OAAhC;AAEA,WAAOA,OAAP;AACD,GAjCiB;AAkClBmB,EAAAA,WAAW,EAAElB,EAAE,IAAI;AACjBR,IAAAA,SAAS,CAACI,KAAV,GAAkBJ,SAAS,CAACI,KAAV,CAAgBuB,MAAhB,CAAuBrB,IAAI,IAAIA,IAAI,CAACE,EAAL,IAAWA,EAA1C,CAAlB;AACA;AACD;AArCiB,CAApB;AAwCA,eAAeN,WAAf","sourcesContent":["import dummyData from '../utils/dummyData';\nimport Meal from '../models/meal.model';\n\nconst MealService = {\n  fetchAllMeals: () => {\n    return dummyData.meals.map(meal => {\n      const newMeal = new Meal();\n      newMeal.id = meal.id;\n      newMeal.name = meal.name;\n      newMeal.desc = meal.desc;\n      newMeal.price = meal.price;\n      return newMeal;\n    });\n  },\n  addMeal: meal => {\n    const mealLen = dummyData.meals.length;\n    const lastId = dummyData.meals[mealLen - 1].id;\n    const newId = lastId + 1;\n\n    meal.id = newId;\n\n    dummyData.meals.push(meal);\n    return meal;\n  },\n  getAMeal: id => {\n    const meal = dummyData.meals.find(meal => meal.id == id);\n    return meal || {};\n  },\n  updateAMeal: (id, updatedMeal) => {\n    const oldMealIndex = dummyData.meals.findIndex(meal => meal.id == id);\n    const oldMeal = dummyData.meals[oldMealIndex];\n    const newMeal = { ...oldMeal, ...updatedMeal, id: parseInt(id) };\n\n    dummyData.meals[oldMealIndex] = newMeal;\n\n    return newMeal;\n  },\n  deleteAMeal: id => {\n    dummyData.meals = dummyData.meals.filter(meal => meal.id != id);\n    return;\n  }\n};\n\nexport default MealService;\n"],"file":"meal.service.js"}